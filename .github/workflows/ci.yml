name: DevSecOps Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  Static-Application-Security-Testing-SAST:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Perform ShiftLeft Scan
        uses: ShiftLeftSecurity/scan-action@master
        with:
          type: "java,javascript"
        env:
          WORKSPACE: https://github.com/${{ github.repository }}/blob/${{ github.sha }}
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
      
      - name: Upload ShiftLeft SAST reports
        uses: actions/upload-artifact@v4
        with:
          name: shiftleft-sast-reports
          path: reports/shiftleft

      - name: njsscan check
        uses: ajinabraham/njsscan-action@master
        with:
          args: '.'

      - name: Upload njsscan reports
        uses: actions/upload-artifact@v4
        with:
          name: njsscan-reports
          path: reports/njsscan

  Static-Code-Quality-Check:
    runs-on: ubuntu-latest
    needs: Static-Application-Security-Testing-SAST
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 10
        continue-on-error: true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  Secret-Scanning:
    runs-on: ubuntu-latest
    needs: Static-Code-Quality-Check
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
  
      - name: Secret Scanner
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE}} # Only required for Organizations, not personal accounts.

  
      - name: Upload Secret Scanning reports
        uses: actions/upload-artifact@v4
        with:
          name: secret-scanning-reports
          path: secret-scanning-reports


  Build-Tag-Push-Scan:
    runs-on: ubuntu-latest
    needs: Secret-Scanning
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
  
      # Build the Maven project
      - name: Build with Maven
        run: mvn package --file pom.xml
  
      # Upload Maven build artifact
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: Boardgame
          path: target/*.jar
  
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
  
      # Build Docker image
      - name: Build Docker Image
        run: docker build -t anshumaan10/boardgame:latest .
  
      # Perform Trivy image scan
      - name: Trivy Image Scan
        run: |
          trivy image --format table -o trivy-image-report.html anshumaan10/boardgame:latest
      
      - name: Upload Trivy Image Scan report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-image-report
          path: trivy-image-report.html

  Software-Composition-Analysis-SCA:
    runs-on: ubuntu-latest
    needs: Build-Tag-Push-Scan
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/maven@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Upload Snyk reports
        uses: actions/upload-artifact@v4
        with:
          name: snyk-reports
          path: snyk-reports

  kubernetes-deploy:
    runs-on: ubuntu-latest
    needs: Software-Composition-Analysis-SCA
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # - name: Set up Kubectl
      #   uses: tale/kubectl-action@v1
      #   with:
      #     base64-kube-config: ${{ secrets.KUBE_CONFIG }}

      # - name: Deploy to Kubernetes
      #   run: |
      #     kubectl apply -f deployment-service.yaml -n webapps
      #     kubectl get svc -n webapps
